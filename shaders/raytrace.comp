#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(push_constant) uniform PushConstants {
    mat4 projView;
    vec2 resolution;
} pc;

layout(binding = 0) buffer SceneData {
    vec3 positions[];
} scene;

layout(binding = 1, rgba8) uniform writeonly image2D outputImage;

void main() {
    uvec2 pixel = gl_GlobalInvocationID.xy;
    if (pixel.x >= pc.resolution.x || pixel.y >= pc.resolution.y) return;

    vec3 rayOrigin = vec3(0.0, 0.0, -5.0);
    vec3 rayDir = normalize(vec3((pixel.x / pc.resolution.x - 0.5), (pixel.y / pc.resolution.y - 0.5), 1.0));

    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
    for (uint i = 0; i < scene.positions.length() / 3; i += 3) {
        color = vec4(scene.positions[i], 1.0);
        break;
    }

    imageStore(outputImage, ivec2(pixel), color);
}